clc; close all; clear all;

%h=[0.006 0.017 0.015 0.08 0.035];
data=[110.47, 117.67, 123.61, 117.97, 108.05, 94.51, 100.34, 110.07, 111.77, 109.79, 107.87,107.28, 109.55, 112.68 ,106.45 ,101.57 ,101.10 ,101.11 ,104.86 ,108.45 ,109.47 ,107.37 ,106.55, 108.72,105.29, 106.19, 105.30, 105.56, 106.85, 109.05, 106.30, 101.89, 96.96, 86.83, 77.58, 61.21, 46.59, 56.43, 55.18, 59.07, 63.82, 61.75, 56.30, 47.33, 46.10, 46.68, 42.50, 35.68, 28.08, 30.53, 36.42, 39.88, 45.01, 46.96, 43.52, 44.38, 44.48, 49.25, 44.46, 52.74];
x=1./(data);
%x=0:0.01:0.2;
%h=[0.06 0.02 0.03];
%h1=logsig(h);

% wh1=[0.02 0.07 0.04 0.09 0.03];
% wh2=[0.06 0.08 0.00 0.04 0.03];
% wh3=[0.05 0.07 0.04 0.02 0.04];
% wh4=[0.06 0.02 0.04 0.07 0.09];
% wh5=[0.02 0.05 002 0.08 0.01];

wh1=[0 0 0 0 0];
wh2=[0 0 0 0 0];
wh3=[0 0 0 0 0];
wh4=[0 0 0 0 0];
wh5=[0 0 0 0 0];


w2=[0 0 0 0 0];
bias_1=[0 0 0 0 0]; % needs to be fed to 5 hidden layers
bias_2=0;  % fed to only output layer

lr1=10;
lr2=10;
%mse11=[];

for n1=1:1:50000
    for n=0:1:length(x)-6
        i1=x(1,1+n:5+n);
        %i1=h;
        y_actual=x(n+6);
        %y_actual=0.1234;
        mse=[];
        mse1=[];
        mse_b1=[];
        mse_b2=[];
        mmse=[];
        
        %multiplication of input and weights
        zh1=sum(i1.*wh1)+bias_1(1);
        zh2=sum(i1.*wh2)+bias_1(2);
        zh3=sum(i1.*wh3)+bias_1(3);
        zh4=sum(i1.*wh4)+bias_1(4);
        zh5=sum(i1.*wh5)+bias_1(5);
        zh=[zh1 zh2 zh3 zh4 zh5];
        %applying sigmoid function
        ph1 = logsig(zh1);
        ph2 = logsig(zh2);
        ph3 = logsig(zh3);
        ph4 = logsig(zh3);
        ph5 = logsig(zh3);
        ph=[ph1 ph2 ph3 ph4 ph5];
        %input to output layer
        y_cap= sum(ph.*w2)+bias_2;

        %output of output layer
        z_cap= logsig(y_cap);

        %calculating error for input layer
        for i=1:1:5
            for j=1:1:5
               first_term= 2*(z_cap-y_actual)*(exp(-y_cap))*((1+exp(-y_cap))^-2);
               sec_term=i1(j);
               third_term=w2(i)*exp(-zh(i))*((1+exp(-zh(i)))^-2);
               error = first_term*sec_term*third_term;
               mse = [mse error];
            end
           mmse=[mmse ; mse];
           mse=[];
        end
        %weights update of input layer
        %err = sum(mse(:));
        
            for j=1:1:5
              wh1(1,j)=wh1(1,j)-lr1*mmse(1,j);              
            end
            for j=1:1:5
              wh2(1,j)=wh2(1,j)-lr1*mmse(2,j);
            end   
            for j=1:1:5
              wh3(1,j)=wh3(1,j)-lr1*mmse(3,j);
            end   
            for j=1:1:5
              wh4(1,j)=wh4(1,j)-lr1*mmse(4,j);
            end   
            for j=1:1:5
              wh5(1,j)=wh5(1,j)-lr1*mmse(5,j);
            end   
            
          
        %calculating error for input bias_1
        for j=1:1:5
           first_term_b1= 2*(z_cap-y_actual)*(exp(-y_cap))*((1+exp(-y_cap))^-2);
           sec_term_b1=1;
           third_term_b1=w2(j)*exp(-zh(j))*((1+exp(-zh(j)))^-2);
           error_b1 = first_term_b1*sec_term_b1*third_term_b1;
           mse_b1 = [mse_b1 error_b1];
        end
        %weights update of input layer
        %err_b1 = sum(mse_b1(:));
        for k=1:1:5
          bias_1(1,k)=bias_1(1,k)-lr1*mse_b1(1,k);
        end
        
        
        %calculating error for output layer
        for j=1:1:5
           first_term1= 2*(z_cap-y_actual)*(exp(-y_cap))*((1+exp(-y_cap))^-2);
           sec_term1=((1+exp(-zh(j)))^-1);
           error1 = first_term1*sec_term1;
           mse1 = [mse1 error1];
        end
        %weights update of output layer
        err1 = sum(mse1(:));
        for k=1:1:5
          w2(1,k)=w2(1,k)-lr2*mse1(1,k);
        end
        
        
         %calculating error for output layer bias_2
        for j=1:1:1
           first_term_b2= 2*(z_cap-y_actual)*(exp(-y_cap))*((1+exp(-y_cap))^-2);
           sec_term_b2=1;
           error_b2 = first_term_b2*sec_term_b2;
           mse_b2 = [mse_b2 error_b2];
        end
        %weights update of output layer
        err_b2 = sum(mse_b2(:));
        for k=1:1:1
          bias_2(1,k)=bias_2(1,k)-lr2*err_b2;
        end
    end
end

i1=[28.08, 30.53, 36.42, 39.88, 45.01];
%0.66818780
    %multiplication of input and weights
    zh1_new=sum(i1.*wh1)+bias_1(1);
    zh2_new=sum(i1.*wh2)+bias_1(2);
    zh3_new=sum(i1.*wh3)+bias_1(3);
    zh4_new=sum(i1.*wh4)+bias_1(4);
    zh5_new=sum(i1.*wh5)+bias_1(5);
    zh_new=[zh1_new zh2_new zh3_new zh4_new zh5_new];
    %applying sigmoid function
    ph1_new = logsig(zh1_new);
    ph2_new = logsig(zh2_new);
    ph3_new = logsig(zh3_new);
    ph4_new = logsig(zh4_new);
    ph5_new = logsig(zh5_new);
    ph_new=[ph1_new ph2_new ph3_new ph4_new ph5_new];
    %input to output layer
    y_cap_new= sum(ph1_new*w2)+bias_2;
    
    %output of output layer
    z_cap_new=double(1/(1+exp(-y_cap_new)));
    %z_cap_new= logsig(y_cap_new);

    disp(z_cap_new);
   % disp(10*z_cap_new/(1-z_cap_new));
